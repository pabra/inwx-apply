name: publish

on:
  push:
    tags:
      - 'v*'
    branches:
      - master

jobs:
  # publish-npm:
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #         registry-url: https://registry.npmjs.org/
  #
  #     - name: Get npm cache directory
  #       id: npm-cache
  #       run: |
  #         echo "CACHE_DIR=$(npm config get cache)" >> $GITHUB_OUTPUT
  #
  #     - uses: actions/cache@v4
  #       id: cache
  #       with:
  #         path: ${{ steps.npm-cache.outputs.CACHE_DIR }}
  #         key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-${{ matrix.node }}-
  #           ${{ runner.os }}-node-
  #
  #     - name: publish
  #       env:
  #         NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  #       run: |
  #         set -e
  #         npm ci
  #         npm run test:before-publish
  #         npm publish

  publish-docker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: get package.json
        id: package_json
        run: |
          echo JSON=$(cat package.json) >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        # with:
        #   platforms: linux/amd64,linux/arm64,linux/arm/v7

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: pabra/inwx-apply
          labels: |
            org.opencontainers.image.authors=${{ fromJSON( steps.package_json.outputs.JSON ).author }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          # platforms: linux/amd64,linux/arm64,linux/arm/v7
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=pabra/inwx-apply:buildcache
          cache-to: type=registry,ref=pabra/inwx-apply:buildcache,mode=max
